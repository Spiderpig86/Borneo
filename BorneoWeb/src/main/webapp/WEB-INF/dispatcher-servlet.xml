<!-- Configure the servlet -->
<!-- Context is used to let the server know where the other servlet programs
are -->

<beans xmlns = "http://www.springframework.org/schema/beans"
       xmlns:context = "http://www.springframework.org/schema/context"
       xmlns:mvc = "http://www.springframework.org/schema/mvc"
       xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation = "
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd"
>

    <!-- Add the context that points to our controller in our controller
    package, will be used to handle web requests along with our exceptions -->
    <context:component-scan base-package="net.spiderpig" />
    <context:component-scan base-package="net.spiderpig.DataAccessObjects" /> <!-- Add
    this so that our context can scan and find this component (used in
    PageController -->
    <context:component-scan base-package="net.spiderpig.Config" /> <!-- Scan
    for Hibernate config -->

    <!-- We need to create a bean to create our view resolver, to help us map
     the JSPs to our routes -->
    <bean id = "viewResolver"
          class =
                  "org.springframework.web.servlet.view.InternalResourceViewResolver">

        <!-- Provide values to our 2 properties that are required for the
        prefix of the URLs -->
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" /> <!-- File extension -->

    </bean>

    <!-- Use MVC import to load static resources -->
    <mvc:annotation-driven /> <!-- We use annotations in our app -->

    <mvc:resources mapping="/resources/**" location="/assets/" /> <!--
     Specify resources directory and get all files and extensions '**' -->

</beans>